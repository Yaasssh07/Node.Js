name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job for testing
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Fix Jest Permissions
        run: chmod +x node_modules/.bin/jest

      - name: Run tests
        run: npx jest

  # Job for building Docker image and deploying to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: test  # This ensures the deploy job only runs if the test job succeeds
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }} # For Slack or Notifications

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: secrets.DOCKER_USERNAME 
          password: secrets.DOCKER_PASSWORD 

      - name: Build Docker image
        run: |
          docker build -t my-app:${{ github.sha }} .

      - name: Push Docker image to DockerHub
        run: |
          docker push my-app:${{ github.sha }}

      - name: Set up kubectl
        uses: Azure/setup-kubectl@v1  # Corrected action for setting up kubectl
        with:
          version: '1.21.0'  # Specify the kubectl version you need
          kubeconfig: ${{ secrets.KUBECONFIG }}  # Ensure this secret is set up in GitHub Secrets

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Get deployment URL
        id: deploy
        run: |
          # This will depend on your Kubernetes setup
          # Fetch the URL of the deployed service (adjust based on your setup)
          kubectl get svc my-app-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' > deployment-url.txt
          echo "::set-output name=deployment-url::$(cat deployment-url.txt)"

  # Job for sending Slack notifications
  notify:
    runs-on: ubuntu-latest
    needs: deploy  # This ensures the notify job only runs if the deploy job succeeds
    steps:
      - name: Send notification to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }} # It will send success or failure status
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK }} # Add this secret to GitHub Secrets
          text: "Deployment to Kubernetes has finished. Check the deployment: ${{ needs.deploy.outputs.deployment-url }}"
