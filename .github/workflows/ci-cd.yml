name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job for testing
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Fix Jest Permissions
        run: chmod +x node_modules/.bin/jest

      - name: Run tests
        run: npx jest

  # Job for building Docker image and deploying to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: test 
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }} # For Slack or Notifications

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
  
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/node.js:latest .

      - name: List Docker Images
        run: docker images

      
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/node.js:latest

     
            # Step 5: Set up kubectl
      - name: Create kubeconfig file
        run: |
          echo "${{ secrets.KUBECONFIG_JSON }}" | base64 -d > kubeconfig
          export KUBECONFIG=kubeconfig
          - name: Debug kubeconfig
            run: |
    echo "KUBECONFIG: $KUBECONFIG"
            cat kubeconfig

      - name: Deploy to Kubernetes
       run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml


      - name: Get deployment URL
        id: deploy
        run: |
          # This will depend on your Kubernetes setup
          # Fetch the URL of the deployed service (adjust based on your setup)
          kubectl get svc my-app-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' > deployment-url.txt
          echo "::set-output name=deployment-url::$(cat deployment-url.txt)"

  # Job for sending Slack notifications
  notify:
    runs-on: ubuntu-latest
    needs: deploy  
    steps:
      - name: Send notification to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }} 
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK }} 
          text: "Deployment to Kubernetes has finished. Check the deployment: ${{ needs.deploy.outputs.deployment-url }}"
